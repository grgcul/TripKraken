@model TripKraken.Service.ViewModel.MainView
@{
    ViewBag.Title = "Home page - Trip kraken";
}
@section breadcrump{
        <div class="page-header-title">
            <h4 class="m-b-10">Dashboard</h4>
        </div>
        <ul class="breadcrumb">
            <li class="breadcrumb-item"><a href="@Url.Action("Index","Home")"><i class="feather icon-home"></i></a></li>
            <li class="breadcrumb-item"><a href="#!">Dashboard</a></li>
        </ul>
        <hr />
}
@{
    Html.RenderAction("Search", "Home",new { actionP="Index",controllerP="Home"});
}

<div class="row m-t-45">
    <div class="col-lg-12">
        <div id="chartdiv"></div>
    </div>
</div>


@section scripts{

    <!-- multi-select Js -->
    <script src="~/assets/plugins/multi-select/js/jquery.quicksearch.js"></script>
    <script src="~/assets/plugins/multi-select/js/jquery.multi-select.js"></script>
    <script src="https://www.amcharts.com/lib/4/core.js"></script>
    <script src="https://www.amcharts.com/lib/4/maps.js"></script>
    <script src="https://www.amcharts.com/lib/4/geodata/worldLow.js"></script>
    <!-- form-select-custom Js -->
    <script src="~/assets/js/pages/form-select-custom.js"></script>
    <script>
        $(document).ready(function() {
        @if (false)
        {
            <text>
        function notify(message, type) {
            $.growl({
                    message: message
                },
                {
                    type: type,
                    allow_dismiss: false,
                    label: 'Cancel',
                    className: 'btn-xs btn-inverse',
                    placement: {
                        from: 'bottom',
                        align: 'right'
                    },
                    delay: 5000,
                    animate: {
                        enter: 'animated fadeInRight',
                        exit: 'animated fadeOutRight'
                    },
                    offset: {
                        x: 30,
                        y: 30
                    }
                });
        };

        notify('You choose @Model.Countries.SingleOrDefault(x => x.Id == Model.CountryId ).Name', 'inverse');
            </text>
        }


        });


        var chart = am4core.create("chartdiv", am4maps.MapChart);
        chart.geodata = am4geodata_worldLow;

        chart.projection = new am4maps.projections.Miller();

        var polygonSeries = chart.series.push(new am4maps.MapPolygonSeries());

        polygonSeries.useGeodata = true;

        var polygonTemplate = polygonSeries.mapPolygons.template;
        polygonTemplate.tooltipText = "{name}";
        polygonTemplate.fill = am4core.color("#74B266");

        polygonTemplate.events.on("hit", function(ev) {

            console.log(ev.target.dataItem.dataContext.name);
            $('#countryValue').val(ev.target.dataItem.dataContext.name);
            $('#formCountries').submit();
        });

        var hs = polygonTemplate.states.create("hover");
        hs.properties.fill = am4core.color("#367B25");

        polygonSeries.exclude = ["AQ"];

        chart.zoomControl = new am4maps.ZoomControl();
    </script>
}