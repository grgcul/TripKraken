@model TripKraken.Service.ViewModel.MainView
@{
    ViewBag.Title = "Home page - Trip kraken";
}
@section breadcrump{
    <div class="page-header-title">
        <h5 class="m-b-10">Dashboard</h5>
    </div>
    <ul class="breadcrumb">
        <li class="breadcrumb-item"><a href="@Url.Action("Index","Home")"><i class="feather icon-home"></i></a></li>
        <li class="breadcrumb-item"><a href="#!">Dashboard</a></li>
    </ul>
    <hr />
}
<div class="row">

    <div class="col-md-6">
        @using (Html.BeginForm("Index", "Home"))
        {
            <div class="form-group">
                <label for="exampleFormControlSelect1">Choose Country</label>
                <div class="col-md-5">
                    @Html.DropDownListFor(x => x.CountryId, new SelectList(Model.Countries, "Id", "Name"), "Choose country", htmlAttributes: new { @class = "form-control", id = "Country", onchange = "this.form.submit();" })
                </div>
            </div>
        }
    </div>
</div>


@section scripts{

    <!-- multi-select Js -->
    <script src="~/assets/plugins/multi-select/js/jquery.quicksearch.js"></script>
    <script src="~/assets/plugins/multi-select/js/jquery.multi-select.js"></script>

    <!-- form-select-custom Js -->
    <script src="~/assets/js/pages/form-select-custom.js"></script>
    <script>
        $(document).ready(function() {
        @if (false)
        {
            <text>
        function notify(message, type) {
            $.growl({
                    message: message
                },
                {
                    type: type,
                    allow_dismiss: false,
                    label: 'Cancel',
                    className: 'btn-xs btn-inverse',
                    placement: {
                        from: 'bottom',
                        align: 'right'
                    },
                    delay: 5000,
                    animate: {
                        enter: 'animated fadeInRight',
                        exit: 'animated fadeOutRight'
                    },
                    offset: {
                        x: 30,
                        y: 30
                    }
                });
        };

        notify('You choose @Model.Countries.SingleOrDefault(x => x.Id == Model.CountryId ).Name', 'inverse');
            </text>
        }


        });
    </script>
}